out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
return(master)
}
mydata<-fetchmax(c('portal','mammal-community-db'))
mydata<-fetchmax('portal')
fetchmax = function(dataset){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset == 1)){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax('portal')
mydata<-fetchmax('portal', 'iris')
mydata<-fetchmax(c('portal', 'iris'))
detach()
library(rdataretriever)
fetchmax = function(dataset){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(master == 1)){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax(c('portal', 'iris'))
detach()
library(rdataretriever)
fetchmax = function(dataset){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset) == 1){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax(c('portal', 'iris'))
view(fetch)
trace('fetch',edit=TRUE)
mam = rdataretriever::fetch('mammal-community-db', 'portal')
mam = rdataretriever::fetch(c('mammal-community-db', 'portal'))
mam = fetch(c('mammal-community-db', 'portal'))
mydata<-fetchmax(c('portal', 'mammal-community-db'))
mydata$`mammal-community-db`$mammal_community_db_communities
detach()
library(rdataretriever)
fetchmax = function(dataset, df=FALSE){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
#list_names = sub(paste(d, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset) == 1){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax(c('portal', 'mammal-community-db'))
detach()
library(rdataretriever)
fetchmax = function(dataset, df=FALSE){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
list_names = sub(paste(d, '-', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset) == 1){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax(c('portal', 'mammal-community-db'))
mydata$`mammal-community-db`$mammal_community_db_communities
detach()
library(rdataretriever)
fetchmax = function(dataset, df=FALSE){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
#list_names = sub(paste(d, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset) == 1){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax(c('portal', 'mammal-community-db'))
/SUB
?sub
detach()
library(rdataretriever)
fetchmax = function(dataset, df=FALSE){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
list_names = sub(paste(dataset_underscores, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset) == 1){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax(c('portal', 'mammal-community-db'))
detach()
library(rdataretriever)
fetchmax = function(dataset, df=FALSE){
temp_path = tempdir()
master = vector('list', length(dataset))
names(master) = dataset
z=1
for (d in dataset){
rdataretriever::install(d, connection='csv', data_dir=temp_path)
files = dir(temp_path)
dataset_underscores = gsub("-", "_", d) #retriever converts - in dataset name to _ in filename
files = files[grep(dataset_underscores, files)]
out = vector('list', length(files))
list_names = sub('.csv', '', files)
list_names = sub(paste(d, '_', sep=''), '', list_names)
list_names = sub(paste(dataset_underscores, '_', sep=''), '', list_names)
names(out) = list_names
for (i in seq_along(files)){
out[[i]] = utils::read.csv(file.path(temp_path, files[i]))}
master[[z]]<- out
z=z+1
}
if (length(dataset) == 1){
return(out)
}
else{
return(master)
}
}
mydata<-fetchmax('mammal-community-db')
trace('fetch', edit=T)
mydata<-fetchmax('portal')
t<-fetch('mammal-community-db')
t<-rdataretriever::fetch('mammal-community-db')
t<-rdataretriever::fetch('portal')
install.packages('aom')
library(car)
install.packages('car')
library(car)
install.packages('Rcpp')
library(car)
library(Rcpp)
install.packages('leaflet')
library(leaflet)
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.93) %>% addTiles()
l
devtools::install_github('rstudio/leaflet')
library(leaflet)
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.93) %>% addTiles()
l
library(leaflet)
dev.new()
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.93) %>% addTiles()
l
library(leaflet)
dev.on()
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.93) %>% addTiles()
l
x11()
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.93) %>% addTiles()
l
shiny::runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825) %>% addTiles()
l
l<-leaflet()  %>% addTiles()
l
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 9) %>% addTiles()
l
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.9) %>% addTiles()
l
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8) %>% addTiles()
l
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8.5) %>% addTiles()
l
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/mydata')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
install.packages('leaflet')
install.packages('leaflet')
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
shiny::runApp('Documents/Shiny/shiny-server/Mapproj')
remove.packages("leaflet", lib="~/R/win-library/3.4")
install.packages('leaflet')
runApp('Documents/Shiny/shiny-server/Mapproj')
l<-leaflet() %>% setView(lng = -71.3795602, lat = 42.0182825, zoom = 8) %>% addTiles()
l
install.packages('leaflet')
devtools::install_github('rstudio/leaflet')
remove.packages("leaflet", lib="~/R/win-library/3.4")
devtools::install_github('rstudio/leaflet')
remove.packages("leaflet", lib="~/R/win-library/3.4")
install.packages('leaflet')
library(shinythemes)
library(shiny)
library(sf)
library(ggplot2)
library(dplyr)
library(httr)
library(leaflet)
library(shinyjs)
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
runApp('Documents/Shiny/shiny-server/Mapproj')
df<-data.frame('lat'= 42.3373567344458, 'lng' = -71.1191368103027, popup = 'My House', label = "Max")
getwd()
setwd("~/Documents/Shiny/shiny-server/Mapproj")
saveRDS(df,'introdata/markers.rds')
runApp()
runApp()
View(df)
lo<-c(5,10,'hi','bye')
rbind(df,lo)
df$popup<-as.character(df$popup)
df$label<-as.character(df$label)
saveRDS(df,'introdata/markers.rds')
rbind(df,lo)
df
df<-rbind(df,lo)
runApp()
ll<-readRDS('introdata/markers.rds')
runApp()
runApp()
runApp()
runApp()
runApp()
readRDS('introdata/markers.rds')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df<-readRDS('introdata/markers.rds')
colnames(df)<-c('latt','lngg','popupp','labell')
saveRDS(df,'introdata/markers.rds')
ll<-readRDS('introdata/markers.rds')
runApp()
runApp()
runApp()
df<-readRDS('introdata/markers.rds')
runApp()
runApp()
df<-readRDS('introdata/markers.rds')
runApp()
runApp()
function ()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
click
df
df[[1]]
df[,2]
df<-readRDS('introdata/markers.rds')
runApp()
mdata
click
mdata<-readRDS('introdata/markers.rds')
runApp()
mdata
runApp()
mdata
mdata$latt
runApp()
mdata
click
class(mdata$latt)
class(click$lat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mdata<-readRDS('introdata/markers.rds')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df
runApp()
asd<-data.frame(latt= 42.3373123226834, lngg =  -71.1191421747208, popupp = 'My House', labell = 'Max', stringsAsFactors = FALSE)
saveRDS(asd,'introdata/markers.rds')
saveRDS(asd, 'introdata/backup.rds')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles()
m %>% clearTiles()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles() %>% addProviderTiles(providers$Stamen.Toner)
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles() %>% addProviderTiles(providers$Stamen.Toner) %>% addTiles()
names(providers)
runApp()
runApp()
runApp()
runApp()
runApp()
test
?switch()
runApp()
q<- 'Esri.WorldImagery'
q<-'Esri.WorldImagery'
match(q,providers)
runApp()
runApp()
providers
unique(providers)
names(providers)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
system.time({
rsconnect::deployApp('C:/Users/Max/Documents/Shiny/shiny-server/Mapproj', account = 'maxpohlman')
})
